{"ast":null,"code":"import axios from'axios';const API_URL='/api/products';class ProductService{async getProducts(category){let url=API_URL;// Add category filter if provided\nif(category){url+=`?category=${encodeURIComponent(category)}`;}const response=await axios.get(url);return response.data;}async getProductsWithFilter(filterParams){// Build query parameters\nconst params=new URLSearchParams();if(filterParams.page)params.append('page',filterParams.page.toString());if(filterParams.pageSize)params.append('pageSize',filterParams.pageSize.toString());if(filterParams.searchTerm)params.append('searchTerm',filterParams.searchTerm);if(filterParams.category)params.append('category',filterParams.category);if(filterParams.minPrice)params.append('minPrice',filterParams.minPrice.toString());if(filterParams.maxPrice)params.append('maxPrice',filterParams.maxPrice.toString());if(filterParams.inStock!==undefined)params.append('inStock',filterParams.inStock.toString());if(filterParams.sortBy)params.append('sortBy',filterParams.sortBy);if(filterParams.sortDesc!==undefined)params.append('sortDesc',filterParams.sortDesc.toString());const response=await axios.get(`${API_URL}?${params.toString()}`);return response.data;}async getProduct(id){const response=await axios.get(`${API_URL}/${id}`);return response.data;}async createProduct(product){const response=await axios.post(API_URL,product);return response.data;}async updateProduct(id,product){await axios.put(`${API_URL}/${id}`,product);}async updateStock(id,quantity,isIncrement){await axios.patch(`${API_URL}/${id}/stock`,{quantity,isIncrement});}async deleteProduct(id){await axios.delete(`${API_URL}/${id}`);}async getCategories(){const response=await axios.get(`${API_URL}/categories`);return response.data;}}export default new ProductService();","map":{"version":3,"names":["axios","API_URL","ProductService","getProducts","category","url","encodeURIComponent","response","get","data","getProductsWithFilter","filterParams","params","URLSearchParams","page","append","toString","pageSize","searchTerm","minPrice","maxPrice","inStock","undefined","sortBy","sortDesc","getProduct","id","createProduct","product","post","updateProduct","put","updateStock","quantity","isIncrement","patch","deleteProduct","delete","getCategories"],"sources":["C:/Users/celik/OneDrive/Masaüstü/micro/frontend/src/services/product.service.ts"],"sourcesContent":["import axios from 'axios';\r\nimport { Product, ProductFilterParams, ProductListResponse } from '../types/Product';\r\n\r\nconst API_URL = '/api/products';\r\n\r\nclass ProductService {\r\n  async getProducts(category?: string): Promise<ProductListResponse> {\r\n    let url = API_URL;\r\n    \r\n    // Add category filter if provided\r\n    if (category) {\r\n      url += `?category=${encodeURIComponent(category)}`;\r\n    }\r\n    \r\n    const response = await axios.get(url);\r\n    return response.data;\r\n  }\r\n\r\n  async getProductsWithFilter(filterParams: ProductFilterParams): Promise<ProductListResponse> {\r\n    // Build query parameters\r\n    const params = new URLSearchParams();\r\n    \r\n    if (filterParams.page) params.append('page', filterParams.page.toString());\r\n    if (filterParams.pageSize) params.append('pageSize', filterParams.pageSize.toString());\r\n    if (filterParams.searchTerm) params.append('searchTerm', filterParams.searchTerm);\r\n    if (filterParams.category) params.append('category', filterParams.category);\r\n    if (filterParams.minPrice) params.append('minPrice', filterParams.minPrice.toString());\r\n    if (filterParams.maxPrice) params.append('maxPrice', filterParams.maxPrice.toString());\r\n    if (filterParams.inStock !== undefined) params.append('inStock', filterParams.inStock.toString());\r\n    if (filterParams.sortBy) params.append('sortBy', filterParams.sortBy);\r\n    if (filterParams.sortDesc !== undefined) params.append('sortDesc', filterParams.sortDesc.toString());\r\n    \r\n    const response = await axios.get(`${API_URL}?${params.toString()}`);\r\n    return response.data;\r\n  }\r\n\r\n  async getProduct(id: string): Promise<Product> {\r\n    const response = await axios.get(`${API_URL}/${id}`);\r\n    return response.data;\r\n  }\r\n\r\n  async createProduct(product: Omit<Product, 'id' | 'createdAt' | 'updatedAt' | 'isActive'>): Promise<string> {\r\n    const response = await axios.post(API_URL, product);\r\n    return response.data;\r\n  }\r\n\r\n  async updateProduct(id: string, product: Partial<Product>): Promise<void> {\r\n    await axios.put(`${API_URL}/${id}`, product);\r\n  }\r\n\r\n  async updateStock(id: string, quantity: number, isIncrement: boolean): Promise<void> {\r\n    await axios.patch(`${API_URL}/${id}/stock`, { quantity, isIncrement });\r\n  }\r\n\r\n  async deleteProduct(id: string): Promise<void> {\r\n    await axios.delete(`${API_URL}/${id}`);\r\n  }\r\n\r\n  async getCategories(): Promise<string[]> {\r\n    const response = await axios.get(`${API_URL}/categories`);\r\n    return response.data;\r\n  }\r\n}\r\n\r\nexport default new ProductService(); "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}