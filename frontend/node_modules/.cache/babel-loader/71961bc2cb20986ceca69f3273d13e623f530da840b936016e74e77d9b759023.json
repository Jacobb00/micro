{"ast":null,"code":"import axios from'axios';const API_URL='/api/auth';class AuthService{async login(data){const response=await axios.post(`${API_URL}/login`,data);if(response.data.token){localStorage.setItem('token',response.data.token);localStorage.setItem('user',JSON.stringify(response.data.user));}return response.data;}async register(data){await axios.post(`${API_URL}/register`,data);}logout(){localStorage.removeItem('token');localStorage.removeItem('user');}getCurrentUser(){const userStr=localStorage.getItem('user');if(userStr){return JSON.parse(userStr);}return null;}getToken(){return localStorage.getItem('token');}isAuthenticated(){return!!this.getToken();}}export default new AuthService();","map":{"version":3,"names":["axios","API_URL","AuthService","login","data","response","post","token","localStorage","setItem","JSON","stringify","user","register","logout","removeItem","getCurrentUser","userStr","getItem","parse","getToken","isAuthenticated"],"sources":["C:/Users/celik/OneDrive/Masaüstü/micro/frontend/src/services/auth.service.ts"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = '/api/auth';\r\n\r\nexport interface LoginData {\r\n  email: string;\r\n  password: string;\r\n}\r\n\r\nexport interface RegisterData {\r\n  name: string;\r\n  email: string;\r\n  password: string;\r\n}\r\n\r\nexport interface AuthResponse {\r\n  token: string;\r\n  user: {\r\n    id: string;\r\n    name: string;\r\n    email: string;\r\n  };\r\n}\r\n\r\nclass AuthService {\r\n  async login(data: LoginData): Promise<AuthResponse> {\r\n    const response = await axios.post(`${API_URL}/login`, data);\r\n    if (response.data.token) {\r\n      localStorage.setItem('token', response.data.token);\r\n      localStorage.setItem('user', JSON.stringify(response.data.user));\r\n    }\r\n    return response.data;\r\n  }\r\n\r\n  async register(data: RegisterData): Promise<void> {\r\n    await axios.post(`${API_URL}/register`, data);\r\n  }\r\n\r\n  logout(): void {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('user');\r\n  }\r\n\r\n  getCurrentUser(): any {\r\n    const userStr = localStorage.getItem('user');\r\n    if (userStr) {\r\n      return JSON.parse(userStr);\r\n    }\r\n    return null;\r\n  }\r\n\r\n  getToken(): string | null {\r\n    return localStorage.getItem('token');\r\n  }\r\n\r\n  isAuthenticated(): boolean {\r\n    return !!this.getToken();\r\n  }\r\n}\r\n\r\nexport default new AuthService(); "],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAEzB,KAAM,CAAAC,OAAO,CAAG,WAAW,CAsB3B,KAAM,CAAAC,WAAY,CAChB,KAAM,CAAAC,KAAKA,CAACC,IAAe,CAAyB,CAClD,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAL,KAAK,CAACM,IAAI,CAAC,GAAGL,OAAO,QAAQ,CAAEG,IAAI,CAAC,CAC3D,GAAIC,QAAQ,CAACD,IAAI,CAACG,KAAK,CAAE,CACvBC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAEJ,QAAQ,CAACD,IAAI,CAACG,KAAK,CAAC,CAClDC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAEC,IAAI,CAACC,SAAS,CAACN,QAAQ,CAACD,IAAI,CAACQ,IAAI,CAAC,CAAC,CAClE,CACA,MAAO,CAAAP,QAAQ,CAACD,IAAI,CACtB,CAEA,KAAM,CAAAS,QAAQA,CAACT,IAAkB,CAAiB,CAChD,KAAM,CAAAJ,KAAK,CAACM,IAAI,CAAC,GAAGL,OAAO,WAAW,CAAEG,IAAI,CAAC,CAC/C,CAEAU,MAAMA,CAAA,CAAS,CACbN,YAAY,CAACO,UAAU,CAAC,OAAO,CAAC,CAChCP,YAAY,CAACO,UAAU,CAAC,MAAM,CAAC,CACjC,CAEAC,cAAcA,CAAA,CAAQ,CACpB,KAAM,CAAAC,OAAO,CAAGT,YAAY,CAACU,OAAO,CAAC,MAAM,CAAC,CAC5C,GAAID,OAAO,CAAE,CACX,MAAO,CAAAP,IAAI,CAACS,KAAK,CAACF,OAAO,CAAC,CAC5B,CACA,MAAO,KAAI,CACb,CAEAG,QAAQA,CAAA,CAAkB,CACxB,MAAO,CAAAZ,YAAY,CAACU,OAAO,CAAC,OAAO,CAAC,CACtC,CAEAG,eAAeA,CAAA,CAAY,CACzB,MAAO,CAAC,CAAC,IAAI,CAACD,QAAQ,CAAC,CAAC,CAC1B,CACF,CAEA,cAAe,IAAI,CAAAlB,WAAW,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}